library(ggplot2)
library(reshape2)
setwd("~/Desktop/Soccer-Stat/wc-continent-headtohead")
data <- readRDS("breakdown.Rda")
# plotting Europe matchups
b <- subset(data, continent == "europe")
ggplot(data = b, aes(x=opposition_continent, y=gf_game)) + geom_bar(stat = "identity")
b <- melt(b)
b <- rbind(subset(b, variable=="gf_game"),subset(b, variable=="ga_game"))
ggplot(b, aes(x = opposition_continent)) +
geom_bar(data = subset(b, variable == "gf_game"), aes(y = value, fill = value), stat="identity") +
geom_bar(data = subset(b, variable == "ga_game"), aes(y=-value, fill=-value), stat = "identity") +
theme(legend.position = "none") + xlab("") + ylab("GA ---- GF") +
scale_fill_gradient2(low = "red", mid = "white", high = "blue", midpoint = 0, space = "rgb") +
ggtitle("Europe") + ylim(-2.5,2.5)
ggsave(file="europe")
ggsave(file="europe.png")
library(ggplot2)
library(reshape2)
setwd("~/Desktop/Soccer-Stat/wc-continent-headtohead")
data <- readRDS("breakdown.Rda")
# plotting Europe matchups
b <- subset(data, continent == "europe")
ggplot(data = b, aes(x=opposition_continent, y=gf_game)) + geom_bar(stat = "identity")
b <- melt(b)
b <- rbind(subset(b, variable=="gf_game"),subset(b, variable=="ga_game"))
ggplot(b, aes(x = opposition_continent)) +
geom_bar(data = subset(b, variable == "gf_game"), aes(y = value, fill = value), stat="identity") +
geom_bar(data = subset(b, variable == "ga_game"), aes(y=-value, fill=-value), stat = "identity") +
theme(legend.position = "none") + xlab("") + ylab("GA ---- GF") +
scale_fill_gradient2(low = "red", mid = "white", high = "blue", midpoint = 0, space = "rgb") +
ggtitle("Europe") + ylim(-2.5,2.5)
ggsave(file="europe.png")
# function to get the data in the correct format for graphing
subsetting <- function(cont) {
t1 <- subset(data, continent == cont)
t2 <- subset(data, opposition_continent == cont)
t <- data.frame(continent = c(t1$continent, t2$opposition_continent),
opposition_continent = c(t1$opposition_continent, t2$continent),
gf_game = c(t1$gf_game, t2$ga_game),
ga_game = c(t1$ga_game, t2$gf_game))
t <- melt(t)
return(t)
}
# do the same for CONCACAF
t <- subsetting("concacaf")
ggplot(t, aes(x = opposition_continent)) +
geom_bar(data = subset(t, variable == "gf_game"), aes(y = value, fill = value), stat="identity") +
geom_bar(data = subset(t, variable == "ga_game"), aes(y=-value, fill=-value), stat = "identity") +
theme(legend.position = "none") + xlab("") + ylab("GA ---- GF") +
scale_fill_gradient2(low = "red", mid = "white", high = "blue", midpoint = 0, space = "rgb") +
ggtitle("CONCACAF") + ylim(-3,3)
ggsave(file="concacaf.png")
# and africa
t <- subsetting("africa")
ggplot(t, aes(x = opposition_continent)) +
geom_bar(data = subset(t, variable == "gf_game"), aes(y = value, fill = value), stat="identity") +
geom_bar(data = subset(t, variable == "ga_game"), aes(y=-value, fill=-value), stat = "identity") +
theme(legend.position = "none") + xlab("") + ylab("GA ---- GF") +
scale_fill_gradient2(low = "red", mid = "white", high = "blue", midpoint = 0, space = "rgb") +
ggtitle("Africa") + ylim(-3,3)
ggsave(file="africa.png")
# and asia
t <- subsetting("asia")
ggplot(t, aes(x = opposition_continent)) +
geom_bar(data = subset(t, variable == "gf_game"), aes(y = value, fill = value), stat="identity") +
geom_bar(data = subset(t, variable == "ga_game"), aes(y=-value, fill=-value), stat = "identity") +
theme(legend.position = "none") + xlab("") + ylab("GA ---- GF") +
scale_fill_gradient2(low = "red", mid = "white", high = "blue", midpoint = 0, space = "rgb") +
ggtitle("Asia") + ylim(-3,3)
ggsave(file="asia.png")
# and oceania
t <- subsetting("oceania")
ggplot(t, aes(x = opposition_continent)) +
geom_bar(data = subset(t, variable == "gf_game"), aes(y = value, fill = value), stat="identity") +
geom_bar(data = subset(t, variable == "ga_game"), aes(y=-value, fill=-value), stat = "identity") +
theme(legend.position = "none") + xlab("") + ylab("GA ---- GF") +
scale_fill_gradient2(low = "red", mid = "white", high = "blue", midpoint = 0, space = "rgb") +
ggtitle("Oceania") + ylim(-3,3)
ggsave(file="oceania.png")
library(plyr)
setwd("~/Desktop/Soccer-Stat/wc-continent-headtohead")
data <- read.csv("wc_2014_headtohead.csv", stringsAsFactors = FALSE)
temp <- as.data.frame(model.matrix(home_score ~ result, data))
temp$"(Intercept)" <- NULL
temp$resultd <- ifelse(temp$resultl == 1, 0, ifelse(temp$resultw == 1, 0, 1))
data$win <- temp$resultw
data$draw <- temp$resultd
data$loss <- temp$resultl
data$c1 <- apply(data[,c(2,5)], 1, min)
data$c2 <- apply(data[,c(2,5)], 1, max)
data <- subset(data, c1 != c2)
d1 <- subset(data, home_continent == c1)
d2 <- subset(data, away_continent == c1)
d2[c(3,6)] = d2[c(6,3)]
d2[c(8,10)] = d2[c(10,8)]
data <- rbind(d1,d2)
breakdown <- ddply(data, .(c1, c2), summarize,
gp = length(home), gf = sum(home_score), ga = sum(away_score),
wins = sum(win), draws = sum(draw), losses = sum(loss))
breakdown$gf_game <- round(breakdown$gf / breakdown$gp,3)
breakdown$ga_game <- round(breakdown$ga / breakdown$gp,3)
View(breakdown)
sum(breakdown$gp)
View(breakdown)
t <- table(breakdown)
View(breakdown)
t <- table(breakdown$c1, breakdown$c2)
t
install.packages("gridExtra")
source('~/.active-rstudio-document', echo=TRUE)
grid.table(breakdown)
breakdown$c1 <- breakdown$country1
breakdown$c2 <-breakdown$country2
breakdown$c1 <- breakdown$c2 <- NULL
library(gridExtra)
grid.table(breakdown)
?grid.table
grid.table(breakdown, show.rownames = FALSE)
ggsave(file="test.png")
png <- grid.table(breakdown, show.rownames = FALSE)
dev.copy(png,"test.png",width=8,height=6,units="in",res=100)
# DATA NEEDS TO BE UPDATED FOR GAMES PAST 6/30 2PM
library(plyr)
setwd("~/Desktop/Soccer-Stat/wc-continent-headtohead")
data <- read.csv("wc_2014_headtohead.csv", stringsAsFactors = FALSE)
temp <- as.data.frame(model.matrix(home_score ~ result, data))
temp$"(Intercept)" <- NULL
temp$resultd <- ifelse(temp$resultl == 1, 0, ifelse(temp$resultw == 1, 0, 1))
data$win <- temp$resultw
data$draw <- temp$resultd
data$loss <- temp$resultl
data$c1 <- apply(data[,c(2,5)], 1, min)
data$c2 <- apply(data[,c(2,5)], 1, max)
data <- subset(data, c1 != c2)
d1 <- subset(data, home_continent == c1)
d2 <- subset(data, away_continent == c1)
d2[c(3,6)] = d2[c(6,3)]
d2[c(8,10)] = d2[c(10,8)]
data <- rbind(d1,d2)
breakdown <- ddply(data, .(c1, c2), summarize,
gp = length(home), gf = sum(home_score), ga = sum(away_score),
wins = sum(win), draws = sum(draw), losses = sum(loss))
breakdown$gf_game <- round(breakdown$gf / breakdown$gp,3)
breakdown$ga_game <- round(breakdown$ga / breakdown$gp,3)
breakdown$c1 <- breakdown$country1
breakdown$c2 <-breakdown$country2
breakdown$c1 <- breakdown$c2 <- NULL
library(gridExtra)
dev.copy(png,"test.png",width=8,height=6,units="in",res=100)
dev.off()
library(gridExtra)
dev.copy(png,"test.png",width=8,height=6,units="in",res=100)
dev.copy(png,"test.png",width=8,height=6,units="in",res=100)
grid.table(breakdown)
breakdown$gf_game <- round(breakdown$gf / breakdown$gp,2)
breakdown$ga_game <- round(breakdown$ga / breakdown$gp,2)
breakdown$c1 <- breakdown$country1
breakdown$c2 <-breakdown$country2
breakdown$c1 <- breakdown$c2 <- NULL
library(gridExtra)
grid.table(breakdown)
View(breakdown)
breakdown$country1 <- breakdown$c1
breakdown$country2 <-breakdown$c2
breakdown$c1 <- breakdown$c2 <- NULL
library(gridExtra)
grid.table(breakdown)
View(breakdown)
# DATA NEEDS TO BE UPDATED FOR GAMES PAST 6/30 2PM
library(plyr)
setwd("~/Desktop/Soccer-Stat/wc-continent-headtohead")
data <- read.csv("wc_2014_headtohead.csv", stringsAsFactors = FALSE)
temp <- as.data.frame(model.matrix(home_score ~ result, data))
temp$"(Intercept)" <- NULL
temp$resultd <- ifelse(temp$resultl == 1, 0, ifelse(temp$resultw == 1, 0, 1))
data$win <- temp$resultw
data$draw <- temp$resultd
data$loss <- temp$resultl
data$c1 <- apply(data[,c(2,5)], 1, min)
data$c2 <- apply(data[,c(2,5)], 1, max)
data <- subset(data, c1 != c2)
d1 <- subset(data, home_continent == c1)
d2 <- subset(data, away_continent == c1)
d2[c(3,6)] = d2[c(6,3)]
d2[c(8,10)] = d2[c(10,8)]
data <- rbind(d1,d2)
breakdown <- ddply(data, .(c1, c2), summarize,
gp = length(home), gf = sum(home_score), ga = sum(away_score),
wins = sum(win), draws = sum(draw), losses = sum(loss))
breakdown$gf_game <- round(breakdown$gf / breakdown$gp,2)
breakdown$ga_game <- round(breakdown$ga / breakdown$gp,2)
breakdown$country1 <- breakdown$c1
breakdown$country2 <-breakdown$c2
breakdown$c1 <- breakdown$c2 <- NULL
library(gridExtra)
grid.table(breakdown)
View(breakdown)
breakdown[,c(1,2)]
breakdown[,c(1,2)] <- breakdown[,c(7,8)]
View(breakdown)
# DATA NEEDS TO BE UPDATED FOR GAMES PAST 6/30 2PM
library(plyr)
setwd("~/Desktop/Soccer-Stat/wc-continent-headtohead")
data <- read.csv("wc_2014_headtohead.csv", stringsAsFactors = FALSE)
temp <- as.data.frame(model.matrix(home_score ~ result, data))
temp$"(Intercept)" <- NULL
temp$resultd <- ifelse(temp$resultl == 1, 0, ifelse(temp$resultw == 1, 0, 1))
data$win <- temp$resultw
data$draw <- temp$resultd
data$loss <- temp$resultl
data$c1 <- apply(data[,c(2,5)], 1, min)
data$c2 <- apply(data[,c(2,5)], 1, max)
data <- subset(data, c1 != c2)
d1 <- subset(data, home_continent == c1)
d2 <- subset(data, away_continent == c1)
d2[c(3,6)] = d2[c(6,3)]
d2[c(8,10)] = d2[c(10,8)]
data <- rbind(d1,d2)
breakdown <- ddply(data, .(c1, c2), summarize,
gp = length(home), gf = sum(home_score), ga = sum(away_score),
wins = sum(win), draws = sum(draw), losses = sum(loss))
breakdown$gf_game <- round(breakdown$gf / breakdown$gp,2)
breakdown$ga_game <- round(breakdown$ga / breakdown$gp,2)
breakdown$country1 <- breakdown$c1
breakdown$country2 <-breakdown$c2
breakdown$c1 <- breakdown$c2 <- NULL
library(gridExtra)
grid.table(breakdown)
# DATA NEEDS TO BE UPDATED FOR GAMES PAST 6/30 2PM
library(plyr)
setwd("~/Desktop/Soccer-Stat/wc-continent-headtohead")
data <- read.csv("wc_2014_headtohead.csv", stringsAsFactors = FALSE)
temp <- as.data.frame(model.matrix(home_score ~ result, data))
temp$"(Intercept)" <- NULL
temp$resultd <- ifelse(temp$resultl == 1, 0, ifelse(temp$resultw == 1, 0, 1))
data$win <- temp$resultw
data$draw <- temp$resultd
data$loss <- temp$resultl
data$c1 <- apply(data[,c(2,5)], 1, min)
data$c2 <- apply(data[,c(2,5)], 1, max)
data <- subset(data, c1 != c2)
d1 <- subset(data, home_continent == c1)
d2 <- subset(data, away_continent == c1)
d2[c(3,6)] = d2[c(6,3)]
d2[c(8,10)] = d2[c(10,8)]
data <- rbind(d1,d2)
breakdown <- ddply(data, .(c1, c2), summarize,
gp = length(home), gf = sum(home_score), ga = sum(away_score),
wins = sum(win), draws = sum(draw), losses = sum(loss))
breakdown$gf_game <- round(breakdown$gf / breakdown$gp,2)
breakdown$ga_game <- round(breakdown$ga / breakdown$gp,2)
breakdown$home_continent <- breakdown$c1
breakdown$away_continent <-breakdown$c2
breakdown$c1 <- breakdown$c2 <- NULL
library(gridExtra)
grid.table(breakdown)
dev.copy(png,"test.png",width=8,height=6,units="in",res=100)
dev.off()
View(breakdown)
breakdown <- breakdown[c("home_continent", "away_continent", "gp", "gf", "ga", "wins", "draws", "losses",
"gf_game", "ga_game")]
grid.table(breakdown)
dev.copy(png,"test.png",width=8,height=6,units="in",res=100)
dev.off()
# DATA NEEDS TO BE UPDATED FOR GAMES PAST 6/30 2PM
library(plyr)
setwd("~/Desktop/Soccer-Stat/wc-continent-headtohead")
data <- read.csv("wc_2014_headtohead.csv", stringsAsFactors = FALSE)
temp <- as.data.frame(model.matrix(home_score ~ result, data))
temp$"(Intercept)" <- NULL
temp$resultd <- ifelse(temp$resultl == 1, 0, ifelse(temp$resultw == 1, 0, 1))
data$win <- temp$resultw
data$draw <- temp$resultd
data$loss <- temp$resultl
data$c1 <- apply(data[,c(2,5)], 1, min)
data$c2 <- apply(data[,c(2,5)], 1, max)
data <- subset(data, c1 != c2)
d1 <- subset(data, home_continent == c1)
d2 <- subset(data, away_continent == c1)
d2[c(3,6)] = d2[c(6,3)]
d2[c(8,10)] = d2[c(10,8)]
data <- rbind(d1,d2)
breakdown <- ddply(data, .(c1, c2), summarize,
gp = length(home), gf = sum(home_score), ga = sum(away_score),
wins = sum(win), draws = sum(draw), losses = sum(loss))
breakdown$gf_game <- round(breakdown$gf / breakdown$gp,2)
breakdown$ga_game <- round(breakdown$ga / breakdown$gp,2)
breakdown$home_continent <- breakdown$c1
breakdown$away_continent <-breakdown$c2
breakdown$c1 <- breakdown$c2 <- NULL
library(gridExtra)
breakdown <- breakdown[c("home_continent", "away_continent", "gp", "gf", "ga", "wins", "draws", "losses",
"gf_game", "ga_game")]
grid.table(breakdown)
dev.copy(png,"wc_2014.png",width=8,height=6,units="in",res=100)
dev.off()
